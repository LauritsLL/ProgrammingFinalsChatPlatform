TABELSKITSE FOR DB:
_ _ for PK (Primary Key)
* * for relation
~ for arbitrary
n defines a nullable field

Ids(_id_,Teacher_next_id,ILUser_next_id,User_next_id,Friends_next_id,Class_next_id,
    Conversation_next_id,TeacherConversationRelation_next_id,Message_next_id,
    Device_next_id,DeviceUserRelation_next_id,EncryptedDeviceMessageRelation_next_id,
    UserConversationRelation_next_id,ClassILAttributes_next_id)
User(_id_, username, firstname, lastname, salt, password, *ILuserid*(1-1n), *conversations*(M-M), *friends*(M-M))
Friends(_id_,*user1* (M-1),*user2* (M-1),in_process)
Device(_id_,device_id, *user* (M-M))
DeviceUserRelation(_id_, *device* (M-1), *user* (M-1), public_key, authenticated)
EncryptedDeviceMessageRelation(_id_,*deviceuserrelation* (M-1),*message* (M-1),text)
Message(_id_,*sender*(M-1),*conversation*(M-1),*devicemessagerelation*(M-M))
Conversation(_id_,*user*(M-Mn),name,*class*(M-1n),*teachers*(M-Mn),con_id)
UserConversationRelation(_id_,*user* (M-1),*conversation* (M-1),nickname)
ILUser(_id_,itslearning_id,*class*(M-M), *ifTeacher*(1-1n))
Teacher(_id_, *conversations*(M-M))
TeacherConversationRelation(_id_,*teacher* (M-1),*conversation* (M-1))
Class(_id_,name,*ILuserid*(M-M))
ClassILAttributesRelation(_id_, *ILuserid*, *class*)

################## NOTES #######################
# User table has a 'Friends' table Many-to-Many relation but the Friends table do not follow the convention of FriendUserRelation
# All tables are complying with first 'normalform': a Many-to-Many relation are in a separate table.
# CHANGES ARE PROBABLY TO BE MADE WHEN OR IF 'ILAttributes' AND ITSLEARNING ARE INTEGRATED WITH PLATFORM!
